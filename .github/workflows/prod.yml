name: Prod CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_USERNAME: ${{ secrets.GH_USERNAME }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      GH_REPO_NAME: ${{ secrets.GH_REPO_NAME }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Set up env
        env:
          ENV_DEV_PROPERTIES: ${{ secrets.ENV_DEV_PROPERTIES }}
          ENV_PROD_PROPERTIES: ${{ secrets.ENV_PROD_PROPERTIES }}
        run: |
          echo -n ${ENV_DEV_PROPERTIES} | base64 -d > env.dev.properties
          echo -n ${ENV_PROD_PROPERTIES} | base64 -d > env.prod.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew app:build

      - name: Build Release apk
        run: ./gradlew app:assembleProdRelease

      - name: Build Release bundle
        run: ./gradlew app:bundleProdRelease

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/prod/release/*.aab)" >> $GITHUB_OUTPUT

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/prod/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Zip Files
        uses: papeloto/action-zip@v1
        with:
          files: ${{ steps.releaseAab.outputs.aabfile }} ${{ steps.releaseApk.outputs.apkfile }}
          dest: app-prod-release.zip

      - name: Sending release build to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          document: app-prod-release.zip
          message: ğŸš€ New Release Published on PROD! >>> ${{github.head_ref}}.